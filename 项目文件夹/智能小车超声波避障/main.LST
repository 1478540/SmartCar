C51 COMPILER V9.54   MAIN                                                                  10/10/2023 16:38:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\MyProgramFile\Keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2
                    -)

line level    source

   1          #include <reg52.h> //51头文件
   2          #include <intrins.h>   //包含nop等系统函数
   3          #include "QXA51.h"//QX-A51智能小车配置文件
   4          #include "IndividualKey.h"
   5          #include "Delay.h"
   6          
   7          sbit RX = P2^0;//ECHO超声波模块回响端
   8          sbit TX = P2^1;//TRIG超声波模块触发端
   9          
  10          unsigned int KeyType;//检测按下的按钮
  11          
  12          
  13          unsigned char pwm_left_val = 100;//左电机占空比值 取值范围0-170，0最快
  14          unsigned char pwm_right_val = 110;//右电机占空比值取值范围0-170 ,0最快
  15          
  16          unsigned char pwm_t;//周期
  17          unsigned int  time = 0;//传输时间
  18          unsigned long S = 0;//距离
  19          bit      flag = 0;//超出测量范围标志位
  20          
  21          
  22          
  23          /*定时器0中断*/
  24          void timer0() interrupt 1 //T0中断用来计数器溢出,超过测距范围
  25          {
  26   1        flag=1;              //中断溢出标志      
  27   1      }
  28          
  29          void  StartModule()              //启动超声波模块
  30          {
  31   1          TX=1;                          //启动一次模块
  32   1          DelayUs(20);
  33   1          TX=0;
  34   1      }
  35          
  36          
  37          void timer1() interrupt 3
  38          {
  39   1        pwm_t++;//周期计时加
  40   1        if(pwm_t == 255)
  41   1          pwm_t = EN1 = EN2 = 0;
  42   1        if(pwm_left_val == pwm_t)//左电机占空比 
  43   1          EN1 = 1;    
  44   1        if(pwm_right_val == pwm_t)//右电机占空比
  45   1          EN2 = 1;       
  46   1      }
  47          
  48          
  49          /*小车前进*/
  50          void forward()
  51          {
  52   1        left_motor_go; //左电机前进
  53   1        right_motor_go; //右电机前进
  54   1      }
C51 COMPILER V9.54   MAIN                                                                  10/10/2023 16:38:44 PAGE 2   

  55          
  56          /*PWM控制使能 小车后退*/
  57          void backward()
  58          {
  59   1        left_motor_back; //左电机后退
  60   1        right_motor_back; //右电机后退  
  61   1      }
  62          
  63          /*小车停止*/
  64          void stop()
  65          {
  66   1        right_motor_stop;//右电机停止
  67   1        left_motor_stop; //左电机停止 
  68   1      }
  69          
  70          /*PWM控制使能 小车高速左转*/
  71          void left_rapidly()
  72          {
  73   1        left_motor_back;
  74   1        right_motor_go; 
  75   1      }
  76          
  77          /*定时器1中断输出PWM信号*/
  78          
  79          
  80          /*判断S2是否被按下*/
  81          void keyscan()
  82          {
  83   1        for(;;) //死循环
  84   1        {
  85   2          KeyType=scanIndividualKey();
  86   2          if(KeyType == 2)// 实时检测S2按键是否被按下
  87   2          {
  88   3            beep=0;
  89   3            DelayMs(200);
  90   3            beep=1;
  91   3            break;    //退出FOR死循环
  92   3          }
  93   2        } 
  94   1      }
  95          
  96          
  97          
  98          /*计算超声波所测距离*/
  99          void Conut(void)
 100          {
 101   1         while(!RX);    //当RX（ECHO信号回响）为零时等待
 102   1         TR0=1;         //开启计数
 103   1         while(RX);     //当RX为1计数并等待
 104   1         TR0=0;       //关闭计数
 105   1        
 106   1        time=TH0*256+TL0;
 107   1        TH0=0;
 108   1        TL0=0;
 109   1        
 110   1        S=(float)(time*1.085)*0.17;     //算出来是MM
 111   1        if((S>=7000)||flag==1) //超出测量范围
 112   1        {  
 113   2          flag=0;
 114   2        }
 115   1      }
 116          
C51 COMPILER V9.54   MAIN                                                                  10/10/2023 16:38:44 PAGE 3   

 117          /*超声波避障*/
 118          void  Avoid()
 119          {
 120   1        if(S < 400)//设置避障距离 ，单位毫米  刹车距离
 121   1        {
 122   2      //    beep = 0;//使能蜂鸣器
 123   2          stop();//停车
 124   2          backward();//后退
 125   2          DelayMs(50);//后退时间越长、距离越远。后退是为了留出车辆转向的空间
 126   2          do{
 127   3            left_rapidly();//高速左转
 128   3            DelayMs(60);//时间越长 转向角度越大，与实际行驶环境有关
 129   3            stop();//停车
 130   3            DelayMs(100);//时间越长 停止时间越久长
 131   3            StartModule();  //启动模块测距，再次判断是否
 132   3            Conut();      //计算距离
 133   3            
 134   3            }while(S < 280);//判断前面障碍物距离
 135   2      //    beep = 1;//关闭蜂鸣器
 136   2        }
 137   1        else
 138   1        {
 139   2          forward();//前进
 140   2        } 
 141   1      }
 142          
 143          void AllTimerInit(){
 144   1        TMOD |= 0x20;//定时器1工作模式2,8位自动重装。用于产生PWM
 145   1        TMOD |= 0x01;//定时器0工作模块1,16位定时模式。T0用测ECH0脉冲长度
 146   1        TH1 = 220; //
 147   1        TL1 = 220; //100HZ T1
 148   1        TH0 = 0;
 149   1        TL0 = 0;//T0,16位定时计数用于记录ECHO高电平时间         
 150   1        ET1 = 1;//允许T1中断
 151   1        ET0 = 1;//允许T0中断
 152   1        TR1 = 1;//启动定时器1
 153   1        EA  = 1;//启动总中断
 154   1      }
 155          
 156          void main()
 157          {
 158   1      
 159   1        keyscan();//等待按下S2启动小车
 160   1        DelayMs(1000);//延时1秒
 161   1        AllTimerInit();
 162   1        while(1)
 163   1        {
 164   2           StartModule(); //启动模块测距
 165   2           
 166   2           Conut();     //计算距离
 167   2           Avoid();     //避障
 168   2           DelayMs(65);     //测试周期不低于60MS      
 169   2        }
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    344    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
C51 COMPILER V9.54   MAIN                                                                  10/10/2023 16:38:44 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
